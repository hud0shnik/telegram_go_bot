package commands

import (
	"encoding/json"
	"fmt"
	"io/ioutil"
	"log"
	"net/http"
	"tgBot/internal/send"
)

type infoResponse struct {
	Username      string `json:"username"`
	Name          string `json:"name"`
	Followers     string `json:"followers"`
	Following     string `json:"following"`
	Repositories  string `json:"repositories"`
	Packages      string `json:"packages"`
	Stars         string `json:"stars"`
	Contributions string `json:"contributions"`
	Avatar        string `json:"avatar"`
}

type commitsResponse struct {
	Success  bool   `json:"success"`
	Error    string `json:"error"`
	Date     string `json:"date"`
	Username string `json:"username"`
	Commits  int    `json:"commits"`
	Color    int    `json:"color"`
}

// –§—É–Ω–∫—Ü–∏—è –≤—ã–≤–æ–¥–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∫–æ–º–º–∏—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è GitHub
func SendCommits(botUrl string, chatId int, username, date string) {

	// –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞
	if username == "" {
		send.SendMsg(botUrl, chatId, "–°–∏–Ω—Ç–∞–∫—Å–∏—Å –∫–æ–º–∞–Ω–¥—ã:\n\n/commits <b>[id]</b>\n\n–ü—Ä–∏–º–µ—Ä:\n/commits <b>hud0shnik</b>")
		return
	}

	// –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –º–æ–µ–º—É API
	resp, err := http.Get("https://githubstatsapi.vercel.app/api/v2/commits?id=" + username + "&date=" + date)

	// –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –æ—à–∏–±–∫—É
	if err != nil {
		send.SendMsg(botUrl, chatId, "–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞")
		log.Printf("http.Get error: %s", err)
		return
	}
	defer resp.Body.Close()

	// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ—Å–ø–æ–Ω—Å–∞
	switch resp.StatusCode {
	case 200:
		// –ü—Ä–∏ —Ö–æ—Ä–æ—à–µ–º —Å—Ç–∞—Ç—É—Å–µ —Ä–µ—Å–ø–æ–Ω—Å–∞, –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–¥–∞
	case 404:
		send.SendMsg(botUrl, chatId, "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω")
		return
	case 400:
		send.SendMsg(botUrl, chatId, "–ü–ª–æ—Ö–æ–π —Ä–µ–∫–≤–µ—Å—Ç")
		return
	default:
		send.SendMsg(botUrl, chatId, "–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞")
		return
	}

	// –ó–∞–ø–∏—Å—å —Ä–µ—Å–ø–æ–Ω—Å–∞
	body, _ := ioutil.ReadAll(resp.Body)
	var user = new(commitsResponse)
	err = json.Unmarshal(body, &user)
	if err != nil {
		log.Printf("in SendCommits: json.Unmarshal err: %v", err)
		send.SendMsg(botUrl, chatId, "–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞")
		send.SendStck(botUrl, chatId, "CAACAgIAAxkBAAIY4mG13Vr0CzGwyXA1eL3esZVCWYFhAAJIAAOtZbwUgHOKzxQtAAHcIwQ")
		return
	}

	// –ï—Å–ª–∏ –ø–æ–ª–µ –ø—É—Å—Ç–æ–µ, –º–µ–Ω—è–µ—Ç date –Ω–∞ "—Å–µ–≥–æ–¥–Ω—è"
	if date == "" {
		date = "—Å–µ–≥–æ–¥–Ω—è"
	}

	// –í—ã–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
	switch user.Color {
	case 1:
		send.SendMsg(botUrl, chatId, fmt.Sprintf("–ö–æ–º–º–∏—Ç–æ–≤ –∑–∞ <i>%s</i> <b>%d</b>", date, user.Commits))
		send.SendStck(botUrl, chatId, "CAACAgIAAxkBAAIYwmG11bAfndI1wciswTEVJUEdgB2jAAI5AAOtZbwUdHz8lasybOojBA")
	case 2:
		send.SendMsg(botUrl, chatId, fmt.Sprintf("–ö–æ–º–º–∏—Ç–æ–≤ –∑–∞ <i>%s</i> <b>%d</b>, –Ω–µ–ø–ª–æ—Ö–æ!", date, user.Commits))
		send.SendStck(botUrl, chatId, "CAACAgIAAxkBAAIXWmGyDE1aVXGUY6lcjKxx9bOn0JA1AAJOAAOtZbwUIWzOXysr2zwjBA")
	case 3:
		send.SendMsg(botUrl, chatId, fmt.Sprintf("–ö–æ–º–º–∏—Ç–æ–≤ –∑–∞ <i>%s</i> <b>%d</b>, –æ—Ç–ª–∏—á–Ω–æ!!", date, user.Commits))
		send.SendStck(botUrl, chatId, "CAACAgIAAxkBAAIYymG11mMdODUQUZGsQO97V9O0ZLJCAAJeAAOtZbwUvL_TIkzK-MsjBA")
	case 4:
		send.SendMsg(botUrl, chatId, fmt.Sprintf("–ö–æ–º–º–∏—Ç–æ–≤ –∑–∞ <i>%s</i> <b>%d</b>, –ø—Ä–µ–∫—Ä–∞—Å–Ω–æ!!!", date, user.Commits))
		send.SendStck(botUrl, chatId, "CAACAgIAAxkBAAIXXGGyDFClr69PKZXJo9dlYMbyilXLAAI1AAOtZbwU9aVxXMUw5eAjBA")
	default:
		send.SendMsg(botUrl, chatId, "–ö–æ–º–º–∏—Ç–æ–≤ –Ω–µ—Ç...")
		send.SendStck(botUrl, chatId, "CAACAgIAAxkBAAIYG2GzRVNm_d_mVDIOaiLXkGukArlTAAJDAAOtZbwU_-iXZG7hfLsjBA")
	}

}

// –§—É–Ω–∫—Ü–∏—è –≤—ã–≤–æ–¥–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ GitHub
func SendGithubInfo(botUrl string, chatId int, username string) {

	// –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞
	if username == "" {
		send.SendMsg(botUrl, chatId, "–°–∏–Ω—Ç–∞–∫—Å–∏—Å –∫–æ–º–∞–Ω–¥—ã:\n\n/github <b>[id]</b>\n\n–ü—Ä–∏–º–µ—Ä:\n/github <b>hud0shnik</b>")
		return
	}

	// –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞
	resp, err := http.Get("https://githubstatsapi.vercel.app/api/v2/user?type=string&id=" + username)
	if err != nil {
		send.SendMsg(botUrl, chatId, "–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞")
		log.Printf("http.Get error: %s", err)
		return
	}
	defer resp.Body.Close()

	// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ—Å–ø–æ–Ω—Å–∞
	switch resp.StatusCode {
	case 200:
		// –ü—Ä–∏ —Ö–æ—Ä–æ—à–µ–º —Å—Ç–∞—Ç—É—Å–µ —Ä–µ—Å–ø–æ–Ω—Å–∞, –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–¥–∞
	case 404:
		send.SendMsg(botUrl, chatId, "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω")
		return
	case 400:
		send.SendMsg(botUrl, chatId, "–ü–ª–æ—Ö–æ–π —Ä–µ–∫–≤–µ—Å—Ç")
		return
	default:
		send.SendMsg(botUrl, chatId, "–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞")
		return
	}

	// –ó–∞–ø–∏—Å—å —Ä–µ—Å–ø–æ–Ω—Å–∞
	body, _ := ioutil.ReadAll(resp.Body)
	var user = new(infoResponse)
	err = json.Unmarshal(body, &user)
	if err != nil {
		log.Printf("in SendGithubInfo: json.Unmarshal err: %v", err)
		send.SendMsg(botUrl, chatId, "–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞")
		send.SendStck(botUrl, chatId, "CAACAgIAAxkBAAIY4mG13Vr0CzGwyXA1eL3esZVCWYFhAAJIAAOtZbwUgHOKzxQtAAHcIwQ")
		return
	}

	// –û—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
	send.SendPict(botUrl, chatId, user.Avatar,
		"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ "+user.Username+":\n"+
			"–ò–º—è "+user.Name+"\n"+
			"–ü–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã—Ö –∑–≤–µ–∑–¥ "+user.Stars+" ‚≠ê\n"+
			"–ü–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ "+user.Followers+" ü§©\n"+
			"–ü–æ–¥–ø–∏—Å–æ–∫ "+user.Following+" üïµÔ∏è\n"+
			"–†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–≤ "+user.Repositories+" üìò\n"+
			"–ü–∞–∫–µ—Ç–æ–≤ "+user.Packages+" üì¶\n"+
			"–ö–æ–Ω—Ç—Ä–∏–±—É—Ü–∏–π –∑–∞ –≥–æ–¥ "+user.Contributions+" üü©\n"+
			"–°—Å—ã–ª–∫–∞ –Ω–∞ –∞–≤–∞—Ç–∞—Ä:\n "+user.Avatar)

}
